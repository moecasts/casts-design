@use 'sass:map';
@use '@casts/theme/styles/scss/vars/core';

@use '@casts/theme/styles/scss/vars/menu';

@use '@casts/theme/styles/plugins/helper/button-style';

@use 'vars';

.#{vars.$menu-prefix-cls} {
  display: flex;
  flex-direction: column;
  background-color: menu.$menu-color-surface;

  transition-timing-function: core.$motion-easing-in-out;
  transition-duration: core.$motion-duration-rapid;
  transition-property: width;

  & &-logo {
    box-sizing: border-box;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: menu.$menu-space;
    margin-bottom: 4px;
    text-align: center;
    border-bottom: core.$border-width-xsmall solid
      core.$color-border-component-default;

    img {
      height: 100%;
      widows: 100%;
    }
  }

  &-content {
    flex: 1;
    padding: menu.$menu-space;
    margin: 0;
  }

  &-operations {
    display: flex;
    flex-wrap: wrap;
    gap: menu.$menu-operations-space-gap;
    padding: menu.$menu-space;
    border-top: core.$border-width-xsmall solid
      core.$color-border-component-default;
  }

  @each $size in vars.$sizes {
    /* --------------------------------- menu logo size ---------------------------------------- */
    &--#{$size} {
      .#{vars.$menu-prefix-cls}-logo {
        height: map.get(menu.$menu-tokens, menu-logo-size-#{$size});
        font-size: map.get(menu.$menu-tokens, menu-logo-font-size-#{$size});
        line-height: map.get(menu.$menu-tokens, menu-logo-size-#{$size});
      }

      .#{vars.$menu-group-prefix-cls}-label {
        @include button-style.button-size(
          $element: 'menu-item',
          $size: $size,
          $tokens: menu.$menu-tokens
        );
      }
    }

    /* --------------------------------- menu item size ---------------------------------------- */
    @at-root .#{vars.$menu-item-prefix-cls} {
      &--#{$size} {
        @include button-style.button-size(
          $element: 'menu-item',
          $size: $size,
          $tokens: menu.$menu-tokens
        );
      }
    }

    /* --------------------------------- sub menu size ---------------------------------------- */
    .#{vars.$sub-menu-prefix-cls} {
      &--#{$size} {
        .#{vars.$sub-menu-prefix-cls}-inner {
          @include button-style.button-size(
            $element: 'menu-item',
            $size: $size,
            $tokens: menu.$menu-tokens
          );
        }

        .#{vars.$sub-menu-prefix-cls}-arrow {
          font-size: map.get(
            menu.$menu-tokens,
            sub-menu-arrow-font-size-#{$size}
          );
        }
      }
    }

    &--collapse.#{vars.$menu-prefix-cls}--#{$size} {
      width: map.get(menu.$menu-tokens, menu-size-#{$size});
    }
  }

  .#{vars.$menu-item-prefix-cls} + .#{vars.$menu-item-prefix-cls} {
    margin-top: menu.$menu-item-space-vertical;
  }

  .#{vars.$sub-menu-prefix-cls}--popup {
    .#{vars.$sub-menu-prefix-cls}-arrow {
      transform: rotate(-90deg) !important;
    }
  }

  .#{vars.$menu-item-prefix-cls} {
    &--inner {
      transition-timing-function: core.$motion-easing-in-out;
      transition-duration: core.$motion-duration-rapid;
      transition-property: padding;
    }

    &-content,
    &-suffix-icon {
      transition-timing-function: core.$motion-easing-in-out;
      transition-duration: core.$motion-duration-rapid;
      transition-property: opacity;
    }
  }

  &--collapse {
    .#{vars.$menu-item-prefix-cls} {
      &-content,
      &-suffix-icon {
        opacity: 0;
      }

      @each $size in vars.$sizes {
        /* --------------------------------- menu logo size ---------------------------------------- */
        &--#{$size} {
          .#{vars.$menu-item-prefix-cls}-inner {
            padding: 0
              calc(
                50% - map.get(menu.$menu-tokens, menu-item-font-size-#{$size}) /
                  2
              );
          }
        }
      }
    }

    .#{vars.$menu-group-prefix-cls}-label {
      font-size: 0;

      &::after {
        position: absolute;
        top: 50%;
        left: 0;
        display: inline-block;
        width: 100%;
        content: '';

        border-bottom: core.$border-width-xsmall solid
          core.$color-border-component-default;
        transform: translateY(-50%);
      }
    }

    .#{vars.$sub-menu-prefix-cls}--popup {
      .#{core.$prefix-cls}-popup-content {
        .#{vars.$menu-item-prefix-cls} {
          &-inner {
            padding: 0 core.$space-075-x 0
              var(--padding-indent, core.$space-075-x);
          }

          &-content,
          &-suffix-icon {
            opacity: 1;
          }
        }
      }
    }
  }
}
