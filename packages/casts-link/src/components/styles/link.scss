@use 'sass:map';
@use '@casts/theme/styles/scss/vars/core';

@use '@casts/theme/styles/scss/link' as base-link;
@use '@casts/theme/styles/scss/vars/link';

$link-prefix-cls: #{link.$prefix-cls}-link;

$link-sizes: 'small', 'medium', 'large';

$link-colors: 'brand', 'info', 'success', 'warning', 'danger', 'neutral';

.#{$link-prefix-cls} {
  position: relative;
  display: inline-flex;
  gap: link.$link-space-gap;
  align-items: center;
  text-decoration: none;
  cursor: pointer;
  border-radius: core.$radius-small;

  outline-width: core.$border-width-small;
  outline-style: solid;
  outline-color: transparent;
  outline-offset: core.$border-width-small;

  transition: color core.$motion-duration-rapid core.$motion-easing-in-out;

  @each $size in $link-sizes {
    &.#{$link-prefix-cls}--#{$size} {
      font-size: map.get(link.$link-tokens, link-font-size-#{$size});
      line-height: map.get(link.$link-tokens, link-line-height-#{$size});
    }
  }

  @each $color in $link-colors {
    &.#{$link-prefix-cls}--#{$color} {
      color: map.get(link.$link-tokens, link-color-text-#{$color}-default);

      &:hover {
        color: map.get(link.$link-tokens, link-color-text-#{$color}-hover);
      }

      &:active {
        color: map.get(link.$link-tokens, link-color-text-#{$color}-active);
      }

      &:focus-visible {
        outline-color: map.get(
          link.$link-tokens,
          link-color-outline-#{$color}-default
        );
      }
    }
  }

  &.#{$link-prefix-cls}--underline {
    &.#{$link-prefix-cls}--underline-hover {
      &::after {
        opacity: 0;
      }

      &:hover {
        &::after {
          opacity: 1;
        }
      }
    }

    &::after {
      position: absolute;
      right: 0;
      bottom: 0;
      left: 0;
      height: 1px;
      content: '';
      background-color: currentColor;
      transition: opacity core.$motion-duration-rapid core.$motion-easing-in-out;
    }
  }
}
