@use 'sass:map';
@use '@casts/theme/styles/scss/vars/core';

@use '@casts/theme/styles/scss/switch' as base-switch;
@use '@casts/theme/styles/scss/vars/switch';

$switch-prefix-cls: #{switch.$prefix-cls}-switch;

$sizes: 'small', 'medium', 'large';

$shapes: 'pill', 'round';

.#{$switch-prefix-cls} {
  display: inline-flex;
  align-items: center;

  touch-action: none;
  cursor: pointer;

  &:focus-visible {
    outline: none;
    .#{$switch-prefix-cls}-indicator {
      outline: core.$border-width-small solid core.$color-outline-brand-default;
      outline-offset: core.$border-width-xsmall;
    }
  }

  &--pressed {
    &:not(.#{$switch-prefix-cls}--disabled, .#{$switch-prefix-cls}--loading) {
      .#{$switch-prefix-cls}-indicator {
        &-handle {
          max-width: 1.5em;
        }
      }
    }
  }

  /* --------------------------------- size start ---------------------------------------- */
  @each $size in $sizes {
    &--#{$size} {
      font-size: map.get(
        $map: switch.$switch-tokens,
        $key: switch-indicator-font-size-#{$size}
      );
      line-height: map.get(
        $map: switch.$switch-tokens,
        $key: switch-indicator-font-size-#{$size}
      );
    }
  }
  /* --------------------------------- size end ---------------------------------------- */

  /* --------------------------------- shape start ---------------------------------------- */
  &--pill {
    .#{$switch-prefix-cls}-indicator {
      &,
      &-handle {
        border-radius: map.get(
          $map: switch.$switch-tokens,
          $key: switch-radius-pill
        );
      }
    }
  }

  &--round {
    @each $size in $sizes {
      &.#{$switch-prefix-cls}--#{$size} {
        .#{$switch-prefix-cls}-indicator {
          &,
          &-handle {
            border-radius: map.get(
              $map: switch.$switch-tokens,
              $key: switch-radius-round-#{$size}
            );
          }
        }
      }
    }
  }
  /* --------------------------------- shape end ---------------------------------------- */

  &-indicator {
    position: relative;
    display: inline-flex;

    align-content: center;
    min-width: 2.5em;
    height: calc(1em + switch.$switch-indicator-space * 2);

    padding: switch.$switch-indicator-space;
    overflow: hidden;
    user-select: none;

    background-color: switch.$switch-color-surface-default;
    outline-color: transparent;
    transition-timing-function: ease;
    transition-duration: core.$motion-duration-rapid;

    transition-property: background-color, outline-color;

    &-handle {
      position: absolute;
      top: switch.$switch-indicator-space;
      right: switch.$switch-indicator-space;
      left: switch.$switch-indicator-space;

      display: inline-flex;
      align-items: center;
      justify-content: center;
      min-width: 1em;

      max-width: 1em;
      height: 1em;

      content: '';
      background-color: #fff;
      box-shadow: core.$shadow-level-1;
      transition: all core.$motion-duration-rapid ease;

      &-icon {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        transform: scale(0.75);
      }

      &-icon-loading {
        font-size: inherit;
      }

      .#{$switch-prefix-cls}-indicator-start {
        position: absolute;
        right: 0;
      }

      .#{$switch-prefix-cls}-indicator-end {
        position: absolute;
        left: 0;
      }
    }

    &-placeholder {
      display: inline-flex;
      flex-direction: column;
      overflow: hidden;
      visibility: hidden;
    }

    &-start,
    &-end {
      display: inline-flex;
      align-items: center;
      padding: switch.$switch-indicator-space;
      color: switch.$switch-indicator-color-text;
      white-space: nowrap;
    }

    &-start {
      padding-right: calc(1.5em + switch.$switch-indicator-space);
    }

    &-end {
      padding-left: calc(1.5em + switch.$switch-indicator-space);
    }
  }

  &-label {
    margin-left: switch.$switch-space;
  }

  &--checked {
    .#{$switch-prefix-cls}-indicator {
      background-color: switch.$switch-color-surface-active;

      &-handle {
        left: calc(100% - 1em - switch.$switch-indicator-space);
      }
    }

    &.#{$switch-prefix-cls}--pressed {
      &:not(.#{$switch-prefix-cls}--disabled, .#{$switch-prefix-cls}--loading) {
        .#{$switch-prefix-cls}-indicator {
          &-handle {
            left: calc(100% - 1.5em - switch.$switch-indicator-space);
          }
        }
      }
    }
  }

  &--loading {
    cursor: not-allowed;
  }

  &--disabled {
    cursor: not-allowed;
    .#{$switch-prefix-cls}-indicator {
      opacity: core.$opacity-60;
    }
  }
}
