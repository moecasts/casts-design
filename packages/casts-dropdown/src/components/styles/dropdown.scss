@use 'sass:map';
@use '@casts/theme/styles/scss/vars/core';

@use '@casts/theme/styles/scss/dropdown' as base-dropdown;
@use '@casts/theme/styles/scss/vars/dropdown';

@use '@casts/theme/styles/plugins/helper/button-style';

@use '@casts/theme/styles/plugins/helper/overflow';

@use '@casts/theme/styles/plugins/helper/scrollbar';

$dropdown-prefix-cls: #{core.$prefix-cls}-dropdown;

.#{$dropdown-prefix-cls} {
  &-popup {
    .#{core.$prefix-cls}-popup-content {
      padding: 0px;
    }
  }

  &-menu {
    display: flex;
    flex-direction: column;
    gap: dropdown.$dropdown-item-space-outer;
    max-height: 300px;
    padding: dropdown.$dropdown-menu-space;
    margin: 0px;
    overflow-y: auto;
    overflow-y: overlay;
    @include scrollbar.scrollbar(8px, 2px);
  }

  &-item {
    @include button-style.button-style($selector: #{$dropdown-prefix-cls}-item);
    @include button-style.button-color(
      $selector: #{$dropdown-prefix-cls}-item,
      // $color-surface-active: $color-surface-neutral-hover,
      // $color-text-active: $color-text-neutral-hover,
      $color-surface-active: transparent
    );

    @include button-style.button-space(
      $space-inset: map.get(
          dropdown.$dropdown-tokens,
          dropdown-item-space-inset-medium
        )
    );

    display: inline-flex;
    align-items: center;

    &-content {
      flex: 1;
      @include overflow.text-ellipsis();
    }

    &-arrow {
      flex-shrink: 0;
      transform: rotate(-90deg);
    }
  }

  $dropdown-sizes: 'small', 'medium', 'large';

  &-section {
    &-label {
      padding: 0 dropdown.$dropdown-section-label-space-inset-medium;

      margin-top: dropdown.$dropdown-section-label-space-outer;
      margin-bottom: dropdown.$dropdown-section-label-space-outer;
      font-size: dropdown.$dropdown-section-label-font-size;
      line-height: dropdown.$dropdown-section-label-line-height;
      color: dropdown.$dropdown-section-label-color;
    }

    &-content {
      display: flex;
      flex-direction: column;
      gap: dropdown.$dropdown-item-space-outer;
    }
  }

  @each $size in $dropdown-sizes {
    &-popup--#{$size} {
      .#{$dropdown-prefix-cls}-section-label {
        padding: 0
          map.get(
            dropdown.$dropdown-tokens,
            dropdown-section-label-space-inset-#{$size}
          );
      }

      .#{$dropdown-prefix-cls}-item {
        @include button-style.button-size(
          $element: dropdown-item,
          $size: $size,
          $tokens: dropdown.$dropdown-tokens
        );

        @include button-style.button-space(
          $space-inset: map.get(
              dropdown.$dropdown-tokens,
              dropdown-item-space-inset-#{$size}
            )
        );
      }
    }
  }
}

$dropdown-divider-prefix-cls: #{core.$prefix-cls}-dropdown-divider;

.#{$dropdown-divider-prefix-cls} {
  width: auto;
  margin-top: dropdown.$dropdown-divider-space-outer;
  margin-right: calc(0px - dropdown.$dropdown-menu-space);
  margin-bottom: dropdown.$dropdown-divider-space-outer;
  margin-left: calc(0px - dropdown.$dropdown-menu-space);
}
