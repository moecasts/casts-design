@use '@casts/theme/styles/scss/vars/core';
@use '@casts/theme/styles/scss/message' as base-message;
@use '@casts/theme/styles/scss/vars/message';

@use '@casts/theme/styles/plugins/motion/fade';

.#{core.$prefix-cls}-message {
  z-index: message.$message-elevation-z-index;
  display: flex;
  gap: core.$space-05-x;
  align-items: flex-start;
  width: fit-content;
  padding: message.$message-space-inset;
  margin-right: core.$space-05-x;
  margin-left: core.$space-05-x;
  font-size: message.$message-font-size;
  color: core.$color-text-primary;
  background-color: core.$color-surface-container-default;
  border-radius: message.$message-radius;
  box-shadow: message.$message-shadow;

  svg {
    font-size: inherit;
  }

  &-icon {
    flex-shrink: 0;
    font-size: 0;
    line-height: 0;

    .#{core.$prefix-cls}-circular-progress-container,
    svg {
      width: message.$message-line-height;
      height: message.$message-line-height;
      font-size: message.$message-line-height;
    }

    @at-root .#{core.$prefix-cls}-message--info:not(
          .#{core.$prefix-cls}-message--fill
        )
        & {
      color: message.$message-color-shape-info-default;
    }

    @at-root .#{core.$prefix-cls}-message--success:not(
          .#{core.$prefix-cls}-message--fill
        )
        & {
      color: message.$message-color-shape-success-default;
    }

    @at-root .#{core.$prefix-cls}-message--warning:not(
          .#{core.$prefix-cls}-message--fill
        )
        & {
      color: message.$message-color-shape-warning-default;
    }

    @at-root .#{core.$prefix-cls}-message--error:not(
          .#{core.$prefix-cls}-message--fill
        )
        & {
      color: message.$message-color-shape-danger-default;
    }
  }

  &-content {
    flex: 1;
    overflow: hidden;
    font-size: message.$message-font-size;
    line-height: message.$message-line-height;
  }

  &-close {
    display: inline-flex;
    flex-shrink: 0;
    align-items: top;
    padding: 0;
    font-size: message.$message-font-size;
    line-height: message.$message-line-height;
    color: inherit;
    cursor: pointer;
    background-color: transparent;
    border: 0;
    opacity: core.$opacity-60;
    transition: opacity fade.$motion-duration-rapid fade.$motion-easing-in-out;

    &:hover {
      opacity: core.$opacity-84;
    }

    &:active {
      opacity: core.$opacity-90;
    }

    svg {
      font-size: message.$message-line-height;
    }
  }

  &--fill {
    &:not(.#{core.$prefix-cls}-message--loading) {
      color: core.$color-palette-white;
    }

    &.#{core.$prefix-cls}-message--info {
      background-color: message.$message-color-shape-info-default;
    }

    &.#{core.$prefix-cls}-message--success {
      background-color: message.$message-color-shape-success-default;
    }

    &.#{core.$prefix-cls}-message--warning {
      background-color: message.$message-color-shape-warning-default;
    }

    &.#{core.$prefix-cls}-message--error {
      background-color: message.$message-color-shape-danger-default;
    }
  }

  // unify icon size
  .#{core.$prefix-cls}-circular-progress-container {
    transform: scale(0.85);
  }
}
